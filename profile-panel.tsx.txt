import React, { useState, useRef, useEffect } from 'react';
import { User, Settings, Bell, LogOut, Edit, Mail, Phone, MapPin, Calendar } from 'lucide-react';

const ProfilePanel = () => {
  const [isOpen, setIsOpen] = useState(false);
  const panelRef = useRef(null);
  const buttonRef = useRef(null);

  // Handle click outside to close panel
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (
        panelRef.current && 
        !panelRef.current.contains(event.target) &&
        buttonRef.current &&
        !buttonRef.current.contains(event.target)
      ) {
        setIsOpen(false);
      }
    };

    if (isOpen) {
      document.addEventListener('mousedown', handleClickOutside);
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [isOpen]);

  const togglePanel = () => {
    setIsOpen(!isOpen);
  };

  const menuItems = [
    { icon: Edit, label: 'Edit Profile', action: () => console.log('Edit Profile') },
    { icon: Settings, label: 'Settings', action: () => console.log('Settings') },
    { icon: Bell, label: 'Notifications', action: () => console.log('Notifications') },
    { icon: LogOut, label: 'Sign Out', action: () => console.log('Sign Out'), danger: true },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4">
      <div className="max-w-6xl mx-auto">
        {/* Header with profile button */}
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-3xl font-bold text-white">Dashboard</h1>
          
          {/* Profile Toggle Button */}
          <div className="relative">
            <button
              ref={buttonRef}
              onClick={togglePanel}
              className="flex items-center space-x-3 bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl px-4 py-2 hover:bg-white/20 transition-all duration-300 group"
            >
              <div className="w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                <User className="w-5 h-5 text-white" />
              </div>
              <div className="hidden sm:block text-left">
                <div className="text-white font-medium">Sarah Johnson</div>
                <div className="text-white/70 text-sm">sarah.johnson@email.com</div>
              </div>
              <div className={`transform transition-transform duration-300 ${isOpen ? 'rotate-180' : ''}`}>
                <svg className="w-4 h-4 text-white/70" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                </svg>
              </div>
            </button>

            {/* Profile Panel */}
            <div
              ref={panelRef}
              className={`absolute right-0 mt-2 w-80 bg-white/95 backdrop-blur-lg rounded-2xl shadow-2xl border border-white/20 overflow-hidden transition-all duration-300 transform ${
                isOpen
                  ? 'opacity-100 translate-x-0'
                  : 'opacity-0 translate-x-full pointer-events-none'
              }`}
            >
              {/* Profile Header */}
              <div className="bg-gradient-to-r from-purple-600 to-pink-600 p-6 text-white">
                <div className="flex items-center space-x-4">
                  <div className="w-16 h-16 bg-white/20 rounded-full flex items-center justify-center">
                    <User className="w-8 h-8" />
                  </div>
                  <div>
                    <h3 className="text-xl font-semibold">Sarah Johnson</h3>
                    <p className="text-white/80">Product Designer</p>
                  </div>
                </div>
              </div>

              {/* Profile Details */}
              <div className="p-6 space-y-4">
                <div className="flex items-center space-x-3 text-gray-700">
                  <Mail className="w-4 h-4 text-purple-500" />
                  <span className="text-sm">sarah.johnson@email.com</span>
                </div>
                <div className="flex items-center space-x-3 text-gray-700">
                  <Phone className="w-4 h-4 text-purple-500" />
                  <span className="text-sm">+1 (555) 123-4567</span>
                </div>
                <div className="flex items-center space-x-3 text-gray-700">
                  <MapPin className="w-4 h-4 text-purple-500" />
                  <span className="text-sm">San Francisco, CA</span>
                </div>
                <div className="flex items-center space-x-3 text-gray-700">
                  <Calendar className="w-4 h-4 text-purple-500" />
                  <span className="text-sm">Joined March 2023</span>
                </div>
              </div>

              {/* Divider */}
              <div className="border-t border-gray-200"></div>

              {/* Menu Items */}
              <div className="p-2">
                {menuItems.map((item, index) => (
                  <button
                    key={index}
                    onClick={item.action}
                    className={`w-full flex items-center space-x-3 px-4 py-3 rounded-xl transition-all duration-200 hover:bg-gray-100 ${
                      item.danger ? 'text-red-600 hover:bg-red-50' : 'text-gray-700'
                    }`}
                  >
                    <item.icon className="w-5 h-5" />
                    <span className="font-medium">{item.label}</span>
                  </button>
                ))}
              </div>

              {/* Footer */}
              <div className="bg-gray-50 px-6 py-4 text-center">
                <p className="text-xs text-gray-500">
                  Version 2.1.0 â€¢ Last updated today
                </p>
              </div>
            </div>
          </div>
        </div>


      </div>
    </div>
  );
};

export default ProfilePanel;